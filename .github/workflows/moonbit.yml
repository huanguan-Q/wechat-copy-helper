name: MoonBit CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  moonbit:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: wasm/moonbit
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js (for copying artifact step)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache MoonBit CLI and home
        uses: actions/cache@v4
        with:
          path: |
            ~/.moon
          key: moon-home-${{ runner.os }}-v1
          restore-keys: |
            moon-home-${{ runner.os }}-

      - name: Setup MoonBit CLI
        shell: bash
        run: |
          echo "$HOME/.moon/bin" >> $GITHUB_PATH
          export PATH="$HOME/.moon/bin:$PATH"
          if ! command -v moon >/dev/null 2>&1; then
            echo "Installing MoonBit CLI..."
            curl -fsSL --retry 3 https://cli.moonbitlang.com/install/unix.sh | bash
          fi
          which moon && moon version

      - name: Cache MoonBit target build
        uses: actions/cache@v4
        with:
          path: wasm/moonbit/target
          key: moon-target-${{ runner.os }}-${{ hashFiles('wasm/moonbit/moon.mod.json', 'wasm/moonbit/src/**', 'wasm/moonbit/tests/**') }}
          restore-keys: |
            moon-target-${{ runner.os }}-

      - name: Format check
        run: moon fmt --check

      - name: Static check
        run: moon check

      - name: Run tests
        run: |
          moon coverage clean
          moon -C tests coverage clean
          moon test --enable-coverage
          moon -C tests test --enable-coverage

      - name: Run doc tests (lib + tests)
        run: |
          moon test --doc --enable-coverage
          moon -C tests test --doc --enable-coverage

      - name: Coverage (summary+HTML, enforce >=80%)
        run: |
          moon coverage report -f summary | tee /tmp/cov.txt
          total_line=$(grep -E 'Total:\s*[0-9]+/[0-9]+' /tmp/cov.txt | tail -n1)
          echo "$total_line"
          nums=$(echo "$total_line" | sed -n 's/Total: \([0-9]\+\)\/\([0-9]\+\)/\1 \2/p')
          read covered total <<< "$nums"
          if [ -z "$covered" ] || [ -z "$total" ]; then echo "Failed to parse coverage"; exit 1; fi
          pct=$(awk -v c="$covered" -v t="$total" 'BEGIN { printf "%.2f", (c/t)*100 }')
          echo "Coverage: $pct%"
          awk -v p="$pct" 'BEGIN { if (p+0 < 80.0) { exit 1 } }' || { echo "Coverage below 80%"; exit 1; }
          moon coverage report -f html -o coverage-html

      - name: Upload coverage HTML artifact
        uses: actions/upload-artifact@v4
        with:
          name: moonbit-coverage-html
          path: wasm/moonbit/coverage-html
          if-no-files-found: error

      - name: Build release
        run: moon build --release

      - name: Copy wasm artifact to extension root
        working-directory: ${{ github.workspace }}
        run: npm run build:wasm

      - name: Upload core.wasm artifact
        uses: actions/upload-artifact@v4
        with:
          name: core-wasm
          path: wasm/core.wasm
          if-no-files-found: error
